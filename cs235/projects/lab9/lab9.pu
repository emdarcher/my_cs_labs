

@startuml

skinparam classAttributeIconSize 0

class Factory {
    + {static} static AVLInterface * getAVL();

}

interface NodeInterface <<interface>> {

	+NodeInterface() {}
	+~NodeInterface() {}
	+{abstract} int getData()
	+{abstract} NodeInterface * getLeftChild()
	+{abstract} NodeInterface * getRightChild()
	+{abstract} int getHeight()

}

class Node {
        +Node * left;
        +Node * right;
        +int data;
        +int balance;
        +Node(int& data, Node* l = NULL, Node* r = NULL);
        +~Node();
        +int getData();
        +NodeInterface * getLeftChild();
        +NodeInterface * getRightChild();
        +int getHeight();
        +int getBalance();
}

interface AVLInterface <<interface>> {

	+AVLInterface() {}
	+{abstract} ~AVLInterface() {}
	+{abstract} NodeInterface * getRootNode()
	+{abstract} bool add(int data)
	+{abstract} bool remove(int data)
}

Factory *-- AVLInterface

Node --|> NodeInterface

class AVL {
        -Node * root;
        -void rot_right(Node*& local_root);
        -void rot_left(Node*& local_root);
        -bool rec_add(Node * &in_root, int &in_data);
        -bool rec_remove(Node * &in_root, int &in_data);
        -bool rec_replace_parent(Node * &old_root, Node * &local_root);
        -void rec_balance(Node*& in_root);
        -void clear();

        +AVL();
        +~AVL();
        +NodeInterface * getRootNode();
        +bool add(int data);
        +bool remove(int data);

}

Factory *-- AVL
AVL --|> AVLInterface
AVLInterface *-- NodeInterface
AVL *-- Node

@enduml
