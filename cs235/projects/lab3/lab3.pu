@startuml

class Factory {

    + {static} static ExpressionManagerInterface * createManager();
}

Factory *-- ExpressionManagerInterface 

interface ExpressionManagerInterface <<interface>> {
        + ExpressionManagerInterface()
        + ~ExpressionManagerInterface()
        + {abstract} bool isBalanced(string expression);
        + {abstract} string postfixToInfix(string postfixExpression);
        + {abstract} string infixToPostfix(string infixExpression);
        + {abstract} string postfixEvaluate(string postfixExpression);

}

ExpressionManagerInterface <|-- ExpressionManager

class ExpressionManager {

        - int is_paren(char ch);
        - int get_precedence(char op);
        - bool is_int_num(string str);
        - bool is_op(char ch);
        - bool op_num_ratio_check(string expression);
        - bool is_valid(string expression);
        - bool balance_check_rec(stack<char>& in_tokens, char prev_char);
        + ExpressionManager();
        + ~ExpressionManager();
        + bool isBalanced(string expression);
        + string postfixToInfix(string postfixExpression);
        + string infixToPostfix(string infixExpression);
        + string postfixEvaluate(string postfixExpression);

}


@enduml
